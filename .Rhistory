main="Unaffected Genes")
A <- apply(data, 1, function (x) {
mean(x[1:10])
}
)
dim(A) <- length(A)
dim(A)
rownames(A) <- rownames(data)
rownames(A)
M <- apply(data, 1, function (x) {
mean(x[6:10]) - mean(x[1:5])
}
)
dim(M) <- length(M)
dim(M)
rownames(M) <- rownames(data)
rownames(M)
M <- apply(data, 1, function (x) {
mean(x[6:10]) - mean(x[1:5])
}
)
dim(M) <- length(M)
dim(M)
rownames(M) <- rownames(data)
rownames(M)
P  <- apply(data, 1, function (x) {
t.test(x[6:10], x[1:5])$p.value
}
)
dim(P) <- length(P)
dim(P)
rownames(P) <- rownames(data)
rownames(P)
plot(M ~ A, ylab="log2(Fold Change)", xlab="Geometric Mean Intensity")
points(M[AffectedGenes] ~ A[AffectedGenes], col = "red", pch = 16)
plot(-log10(P) ~ M)
points(-log10(P)[AffectedGenes] ~ M[AffectedGenes], col = "red", pch = 16)
abline(h=-log10(.05))
abline(v=1)
abline(v=-1)
library(tidyr)
install.packages("tidyr")
library(tidyr)
library("phyloseq")
library("DESeq2")
library(XML)
library("ggplot2")
theme_set(theme_bw())
otutable <- import_biom(BIOMfilename = 'otu_table_mc2_w_tax_no_pynast_failures_no_chimeras_frequency_filtered.biom',
treefilename = 'rep_set_no_chimeras.tre',
parseFunction = parse_taxonomy_greengenes)
mapping <- import_qiime_sample_data(mapfilename = 'R_map.txt')
phylo <- merge_phyloseq(otutable, mapping)
phylo
head(otu_table(phylo))
tail(otu_table(phylo))
phylo_subset = subset_samples(phylo, Day == 3 & Phenotype !="Dead")
phylo_int = subset_samples(phylo, Day==3 & Tide=="intertidal")
phylo_int
phylo_sub = subset_samples(phylo, Day==3 & Tide=="subtidal")
phylo_sub
sample_data(phylo_subset)
sample_data(phylo_int)
sample_data(phylo_sub)
class(sample_data(phylo_subset)$individual)
sample_data(phylo_subset)$individual<-factor(sample_data(phylo_subset)$individual)
otutable <- import_biom(BIOMfilename = 'otu_table_mc2_w_tax_no_pynast_failures_no_chimeras_frequency_filtered.biom',
treefilename = 'rep_set_no_chimeras.tre',
parseFunction = parse_taxonomy_greengenes)
setwd("C:/Users/Lauren/Desktop/Gradschool/UVM/Spring 2017/Ecological Genomics")
otutable <- import_biom(BIOMfilename = 'otu_table_mc2_w_tax_no_pynast_failures_no_chimeras_frequency_filtered.biom',
treefilename = 'rep_set_no_chimeras.tre',
parseFunction = parse_taxonomy_greengenes)
mapping <- import_qiime_sample_data(mapfilename = 'R_map.txt')
phylo <- merge_phyloseq(otutable, mapping)
phylo
head(otu_table(phylo))
tail(otu_table(phylo))
phylo_subset = subset_samples(phylo, Day == 3 & Phenotype !="Dead")
phylo_int = subset_samples(phylo, Day==3 & Tide=="intertidal")
phylo_int
phylo_sub = subset_samples(phylo, Day==3 & Tide=="subtidal")
phylo_sub
sample_data(phylo_subset)
sample_data(phylo_int)
sample_data(phylo_sub)
class(sample_data(phylo_subset)$individual)
sample_data(phylo_subset)$individual<-factor(sample_data(phylo_subset)$individual)
loc <- phyloseq_to_deseq2(phylo_subset, ~  Tide)
loc_deseq_test <- DESeq(loc, test="Wald")
loc_results <- results(loc_deseq_test)
summary(loc_results)
head(loc_results)
alpha <- 0.05
loc_sigtab <- loc_results[which(loc_results$padj < alpha), ]
loc_sigtab
loc_sigtab <- cbind(as(loc_sigtab, "data.frame"), as(tax_table(phylo)[rownames(loc_sigtab), ], "matrix"))
tail(loc_sigtab)
write.table(loc_sigtab, "DE_OTU_intertidal_vs_subtidal.txt", sep="\t")
richness.df <- estimate_richness(phylo_subset, split=TRUE, measures=NULL)
str(richness.df)
richness.df
int_rich.df <- estimate_richness(phylo_int, split=TRUE, measures=NULL)
int_rich.df$Tide <-as.factor("Intertidal")
str(int_rich.df)
int_rich.df
sub_rich.df <- estimate_richness(phylo_sub, split=TRUE, measures=NULL)
sub_rich.df$Tide <-as.factor("Subtidal")
str(sub_rich.df)
sub_rich.df
richByTide.df <- rbind(int_rich.df, sub_rich.df)
richByTide.df
richByTide.df$se.chao1 <- NULL
richByTide.df$se.ACE <- NULL
richByTide.df
t1<-apply(richByTide.df[,-8],2, function(x){t.test(x~richByTide.df$Tide)$p.value})
t2<-apply(richByTide.df[,-8],2, function(x){t.test(x~richByTide.df$Tide)$estimate})
t3<-apply(richByTide.df[,-8],2, function(x){t.test(x~richByTide.df$Tide)$conf.int[1:2]})
str(t1)
t2
t3
t1 <- as.data.frame(t1)
t1
t1 <- t(as.data.frame(t1))
t2 <- t(as.data.frame(t2))
t3 <- t(as.data.frame(t3))
t1
t2
t3
SummTable <- rbind(t1,t2,t3)
SummTable
row.names(SummTable) <- c("pvalue", "Mean in Intertidal", "Mean in Subtidal", "LCI", "UCI")
SummTable
set.seed(28132)
phyloR = rarefy_even_depth(phylo_subset, sample.size = min(sample_sums(phylo_subset)))
title = "Sum of reads for each sample, phyloR"
plot(sort(sample_sums(phyloR), TRUE), type = "h", main = title, ylab = "reads",
ylim = c(0, 20000))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
phyloRmD = merge_samples(phyloR, "Final_phenotype")
phyloRtD = transform_sample_counts(phyloRmD, function(x) 100 * x/sum(x))
p = plot_bar(phyloRtD , "Final_phenotype", fill="Family")
p + geom_bar(aes(color=Family, fill=Family), stat="identity", position="stack")
countsTable <- read.delim('countsdata_trim2.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countsTable <- read.delim('countsdata_trim2.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
head(countData)
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
head(conds)
colData <- as.data.frame(conds)
colData
colDay3 <- subset(colData, day=="day03")
colDay3
countDataDay3<-countData[, which(colnames(countData) %in% row.names(colDay3))]
head(countDataDay3)
ddsLoc<- DESeqDataSetFromMatrix(countData = countDataDay3, colData = colDay3 ,design = ~ location)
ddsLoc
ddsLoc <- ddsLoc[ rowSums(counts(ddsLoc)) > 100, ]
colData(ddsLoc)$location <- factor(colData(ddsLoc)$location, levels=c("int","sub"))
colData(ddsLoc)
ddsLoc <- DESeq(ddsLoc)
names(ddsLoc)
str(ddsLoc)
resLoc <- results(ddsLoc)
resLoc
resLoc <- resLoc[order(resLoc$padj),]
head(resLoc)
summary(resLoc)
resSumm <- merge(as.data.frame(resLoc), as.data.frame(counts(ddsLoc, normalized=TRUE)), by="row.names", sort=FALSE)
names(resSumm)[1] <- "Gene"
resSumm <- head(resSumm)
resSumm
row.names(resSumm) <- c("DN41041_c3_g2", "DN47102_c1_g1", "DN19042_c0_g1", "DN39048_c5_g1", "DN39233_c0_g1", "DN39328_c5_g1")
resSumm <- resSumm[,2:7]
resSumm
normcounts<-data.frame(genes=rownames(counts(ddsLoc, normalized=TRUE)),counts(ddsLoc, normalized=TRUE))
head(normcounts)
names.to.keep <- c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543")
rows.to.keep<-which(rownames(normcounts) %in% names.to.keep)
normcounts <- normcounts[rows.to.keep,]
names(normcounts)
countsDF <- gather(normcounts,individuals,normcounts,I03_5.08_S_2:I38_6.12_H_0)
dim(countsDF)
head(countsDF)
summary(countsDF)
head(cons)
head(conds)
conds$individual <- as.factor(rownames(conds))
str(conds)
library(dplyr)
inter_join(countsDF,conds,by="individual")
library(dplyr)
inter_join(countsDF,conds,by="individual")
inner_join(countsDF,conds,by="individual")
names(countsDF)
conds$individuals <- as.factor(rownames(conds))
inner_join(countsDF,conds,by="individuals")
topHits <- inner_join(countsDF,conds,by="individuals")
ggplot(topHits, aes(x=location,y=normcounts,color=genes))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=normcounts,color=genes))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
summary(countsDF)
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
summary(resLoc)
resLoc <- resLoc[order(resLoc$padj),]
head(resLoc)
summary(resLoc)
resSumm <- merge(as.data.frame(resLoc), as.data.frame(counts(ddsLoc, normalized=TRUE)), by="row.names", sort=FALSE)
names(resSumm)[1] <- "Gene"
resSumm <- head(resSumm)
resSumm
row.names(resSumm) <- c("DN41041_c3_g2", "DN47102_c1_g1", "DN19042_c0_g1", "DN39048_c5_g1", "DN39233_c0_g1", "DN39328_c5_g1")
resSumm <- resSumm[,2:7]
resSumm
normcounts<-data.frame(genes=rownames(counts(ddsLoc, normalized=TRUE)),counts(ddsLoc, normalized=TRUE))
head(normcounts)
names.to.keep <- c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543")
length(names.to.keep)
rows.to.keep<-which(rownames(normcounts) %in% names.to.keep)
normcounts <- normcounts[rows.to.keep,]
normcounts
which(rownames(normcounts) %in% names.to.keep)
names.to.keep <- as.factor(c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543"))
length(names.to.keep)
rows.to.keep<-which(rownames(normcounts) %in% names.to.keep)
normcounts <- normcounts[rows.to.keep,]
normcounts
rows.to.keep
normcounts <- normcounts[normcounts$genes %in%rows.to.keep,]
normcounts
rows.to.keep
names.to.keep <- as.factor(c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543"))
normcounts <- normcounts[normcounts$genes %in% names.to.keep,]
nornmcounts
normcounts<-data.frame(genes=rownames(counts(ddsLoc, normalized=TRUE)),counts(ddsLoc, normalized=TRUE))
head(normcounts)
names.to.keep <- as.factor(c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543"))
length(names.to.keep)
normcounts <- normcounts[normcounts$genes %in% names.to.keep,]
nornmcounts
normcounts
normcounts2 <- normcounts[normcounts$genes %in% names.to.keep,]
nornmcounts2
normcounts[normcounts$genes %in% names.to.keep,]
normcounts2
dim(normcounts2)
resSumm
head(resLoc)
dim(resLoc)
rownames(head(resLoc))
as.factor(rownames(head(resLoc)))
normcounts2 <- normcounts[normcounts$genes %in% as.factor(rownames(head(resLoc))),]
normcounts2
dim(normcounts2)
normcounts<-data.frame(genes=rownames(counts(ddsLoc, normalized=TRUE)),counts(ddsLoc, normalized=TRUE))
head(normcounts)
names.to.keep <- as.factor(c("TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", "TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", "TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", "TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", "TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447 ", "TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543"))
length(names.to.keep)
normcounts2 <- normcounts[normcounts$genes %in% as.factor(rownames(head(resLoc))),]
normcounts2
dim(normcounts2)
library(tidyr)
countsDF <- gather(normcounts,individuals,normcounts,I03_5.08_S_2:I38_6.12_H_0)
library(dplyr)
topHits <- inner_join(countsDF,conds,by="individuals")
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
dim(topHits)
conds$individuals <- as.factor(rownames(conds))
str(conds)
head(countsDF)
dim(countsDF)
dim(countsDF)
head(countsDF)
summary(countsDF)
countsDF <- gather(normcounts2,individuals,normcounts,I03_5.08_S_2:I38_6.12_H_0)
dim(countsDF)
head(countsDF)
summary(countsDF)
head(conds)
conds$individuals <- as.factor(rownames(conds))
str(conds)
topHits <- inner_join(countsDF,conds,by="individuals")
dim(topHits)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1)))+geom_boxplot()+facet_grid(.~genes)
ggplot(topHits, aes(x=location,y=log(normcounts+1), color=genes))+
geom_boxplot()+facet_grid(.~genes)+theme(legend.position="none")
ggplot(topHits, aes(x=location,y=log(normcounts+1), color=genes, fill=genes))+
geom_boxplot()+facet_grid(.~genes)+theme(legend.position="none")
str(topHits)
str(topHits)
normcounts2
str(normcounts2)
normcounts2$genes <- c("DN41041_c3_g2", "DN47102_c1_g1", "DN19042_c0_g1", "DN39048_c5_g1", "DN39233_c0_g1", "DN39328_c5_g1")
dim(normcounts2)
str(normcounts2)
normcounts2
countsDF <- gather(normcounts2,individuals,normcounts,I03_5.08_S_2:I38_6.12_H_0)
dim(countsDF)
head(countsDF)
conds$individuals <- as.factor(rownames(conds))
topHits <- inner_join(countsDF,conds,by="individuals")
dim(topHits)
ggplot(topHits, aes(x=location,y=log(normcounts+1), color=genes, fill=genes))+
geom_boxplot()+facet_grid(.~genes)+theme(legend.position="none")
ggplot(topHits, aes(x=location,y=log(normcounts+1), color=genes, fill=genes))+
geom_boxplot()+facet_grid(.~genes)+theme(legend.position="none")
ggplot(topHits, aes(x=location,y=log(normcounts+1), color=location))+
geom_boxplot()+facet_grid(.~genes)+theme(legend.position="none")
set.seed(28132)
set.seed(28132)
phyloR = rarefy_even_depth(phylo_subset, sample.size = min(sample_sums(phylo_subset)))
title = "Sum of reads for each sample, phyloR"
plot(sort(sample_sums(phyloR), TRUE), type = "h", main = title, ylab = "reads",
ylim = c(0, 20000))
plot(sort(sample_sums(phyloR), TRUE), type = "h", main = title, ylab = "reads",
ylim = c(0, 20000))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
set.seed(28132)
phyloR = rarefy_even_depth(phylo_subset, sample.size = min(sample_sums(phylo_subset)))
phyloRmD = merge_samples(phyloR, "location")
phyloRmD = merge_samples(phyloR, "Tide")
phyloRtD = transform_sample_counts(phyloRmD, function(x) 100 * x/sum(x))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
phyloRmD = merge_samples(phyloR, "Tide")
phyloRt = transform_sample_counts(phyloRmD, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", fill="Order")
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt, facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt, "Tide", facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt, "Tide", facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt, "Tide", facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,"Tide", facet_grid=NULL, fill="Order")
p = plot_bar(phyloRt,"Tide", facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide", fill="Order")
p = plot_bar(phyloRt,x="Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
phyloRmD
p = plot_bar(phyloRt,x="sample", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide", fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x=NULL,facet_grid=~Tide fill="Order")
p = plot_bar(phyloRt,x=NULL,facet_grid=~Tide fill="Order")
p = plot_bar(phyloRt,x=NULL,facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide",facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt,x="Tide",facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide",facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt,x="Tide",facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,"Tide",facet_grid=~Tide, fill="Order")
p = plot_bar(phyloRt,"Tide",facet_grid=~Tide, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
set.seed(28132)
set.seed(28132)
phyloR = rarefy_even_depth(phylo_subset, sample.size = min(sample_sums(phylo_subset)))
phyloRt = transform_sample_counts(phyloR, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
phyloRmD = merge_samples(phyloR, "Tide")
phyloRmD = merge_samples(phyloR, "Tide")
phyloRmD
phyloRt = transform_sample_counts(phyloRmD, function(x) 100 * x/sum(x))
p = plot_bar(phyloRt,x="Tide",facet_grid=NULL, fill="Order")
p + geom_bar(aes(color=Order, fill=Order), stat="identity", position="stack")
loc_sigtab <- cbind(as(loc_sigtab, "data.frame"), as(tax_table(phylo)[rownames(loc_sigtab), ], "matrix"))
library("phyloseq")
library("DESeq2")
library(XML)
library("ggplot2")
theme_set(theme_bw())
otutable <- import_biom(BIOMfilename = 'otu_table_mc2_w_tax_no_pynast_failures_no_chimeras_frequency_filtered.biom',
treefilename = 'rep_set_no_chimeras.tre',
parseFunction = parse_taxonomy_greengenes)
mapping <- import_qiime_sample_data(mapfilename = 'R_map.txt')
phylo <- merge_phyloseq(otutable, mapping)
phylo
head(otu_table(phylo))
tail(otu_table(phylo))
phylo_subset = subset_samples(phylo, Day == 3 & Phenotype !="Dead")
phylo_int = subset_samples(phylo, Day==3 & Tide=="intertidal")
phylo_int
phylo_sub = subset_samples(phylo, Day==3 & Tide=="subtidal")
phylo_sub
sample_data(phylo_subset)
sample_data(phylo_int)
sample_data(phylo_sub)
class(sample_data(phylo_subset)$individual)
sample_data(phylo_subset)$individual<-factor(sample_data(phylo_subset)$individual)
loc <- phyloseq_to_deseq2(phylo_subset, ~  Tide)
loc_deseq_test <- DESeq(loc, test="Wald")
loc_results <- results(loc_deseq_test)
summary(loc_results)
head(loc_results)
alpha <- 0.05
loc_sigtab <- loc_results[which(loc_results$padj < alpha), ]
loc_sigtab
loc_sigtab <- cbind(as(loc_sigtab, "data.frame"), as(tax_table(phylo)[rownames(loc_sigtab), ], "matrix"))
tail(loc_sigtab)
loc_sigtab <- loc_sigtab[order(resLoc$padj),]
head(loc_sigtab)
loc_sigtab <- loc_sigtab[order(resLoc$padj),1:12]
head(loc_sigtab)
loc_sigtab <- loc_sigtab[1:6, 1:12]
loc_sigtab
write.table(loc_sigtab, "DE_OTU_intertidal_vs_subtidal.txt", sep="\t")
loc_results <- results(loc_deseq_test)
head(loc_results)
summary(loc_results)
loc_deseq_test
loc
sample_data(phylo_subset)
phylo_subset = subset_samples(phylo, Day == 3 & Phenotype !="Dead")
phylo_subset
plotCounts(ddsLoc, gene="New.ReferenceOTU3915", intgroup="Tide")
str(results)
dim(results)
str(loc)
dim(loc)
names(loc)
str(loc_deseq_test)
phylo_subset
New.ReferenceOTU3915   0.8503516       3.134412 0.7835567  4.000236 6.327928e-05
head(otu_table(phylo))
summary(loc_results)
loc_deseq_test
summary(resLoc)
resSumm
ddsLoc
colData
summary(ddsLoc)
str(ddsLoc)
names(ddsLoc)
reference(ddsLoc)
topHits
resSumm
summary(resLoc)
head(resLoc)
head(resLoc)
plotCounts(ddsLoc, gene="TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
par(mfrow=c(3,3))
par(mfrow=c(3,3))
plotCounts(ddsLoc, gene="TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
par(mfrow=c(2,3))
par(mfrow=c(2,3))
par(mfrow=c(2,3))
plotCounts(ddsLoc, gene="TRINITY_DN41041_c3_g2_TRINITY_DN41041_c3_g2_i1_g.10613_m.10613", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN47102_c1_g1_TRINITY_DN47102_c1_g1_i3_g.24581_m.24581", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN19042_c0_g1_TRINITY_DN19042_c0_g1_i1_g.1710_m.1710", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39048_c5_g1_TRINITY_DN39048_c5_g1_i1_g.8316_m.8316", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39233_c0_g1_TRINITY_DN39233_c0_g1_i1_g.8447_m.8447", intgroup="location")
plotCounts(ddsLoc, gene="TRINITY_DN39328_c5_g1_TRINITY_DN39328_c5_g1_i1_g.8543_m.8543", intgroup="location")
