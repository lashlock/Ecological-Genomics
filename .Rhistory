anovaModel <- aov(yVar~xVar,data=dataFrame)
print(anovaModel)
summary(anovaModel)
boxplot(yVar~xVar,data=dataFrame,col=c("grey","thistle","orchid"))
boxplot(yVar~xVar,data=dataFrame,col=c("grey","thistle","orchid"))
vec1 <- c(50,66,22)
vec1 <- c(50,66,22)
vec2 <- c(120,22,30)
dataMatrix <- rbind(vec1,vec2)
rownames(dataMatrix) <- c("Cold","Warm")
colnames(dataMatrix) <-c("Aphaenogaster",
"Camponotus",
"Crematogaster")
print(chisq.test(dataMatrix))
mosaicplot(x=dataMatrix,
col=c("goldenrod","grey","black"),
shade=FALSE)
barplot(height=dataMatrix,
beside=TRUE,
col=c("cornflowerblue","tomato"))
chisq.test(dataMatrix)$expected
sum(dataMatrix[,1])
sum(dataMatrix[,1])*sum(dataMatrix[1,])
(sum(dataMatrix[,1])*sum(dataMatrix[1,]))/sum(dataMatrix)
par(mfrow=c(2,1))
expected <- as.matrix(chisq.test(dataMatrix)$expected)
barplot(height=expected,
beside=TRUE,
col=c("cornflowerblue","tomato")) #expected
barplot(height=expected,
beside=TRUE,
col=c("cornflowerblue","tomato")) #expected
barplot(height=dataMatrix,
beside=TRUE,
col=c("cornflowerblue","tomato"))#observed
xVar <- rgamma(n=20,shape=5,scale=5)
xVar <- rgamma(n=20,shape=5,scale=5)
yVar <- rbinom(n=20,size=1,p=0.5)
dataFrame <- data.frame(xVar,yVar)
logRegMod <- glm(yVar ~ xVar,
data=dataFrame,
family=binomial(link="logit"))
print(logRegMod)
summary(logRegMod)
par(mfrow=c(1,1))
plot(x=dataFrame$xVar, y=dataFrame$yVar,pch=21,bg="tan",cex=2.5)
curve(predict(logRegMod,data.frame(xVar=x),type="response"),add=TRUE,lwd=2)
fitLinear <- function(x=runif(10), y=runif(10)){
myMod <- lm(y~x)
myOut <- c(slope=summary(myMod)$coefficients[2,1],
pValue=summary(myMod)$coefficients[2,4])
plot(x=x, y=y)
return(myOut)
}
fitLinear <- function(x=runif(10), y=runif(10)){
myMod <- lm(y~x)
myOut <- c(slope=summary(myMod)$coefficients[2,1],
pValue=summary(myMod)$coefficients[2,4])
plot(x=x, y=y)
return(myOut)
}
fitLinear
linREG <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
myOut <- c(slope=summary(linMOD)$coefficients[2,1],
pValue=summary(linMOD)$coefficients[2,4])
}
linREG()
linREG <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
myOut <- c(slope=summary(linMOD)$coefficients[2,1],
pValue=summary(linMOD)$coefficients[2,4])
return(myOUT)
}
linREG()
linREG <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
myOUT <- c(slope=summary(linMOD)$coefficients[2,1],
pValue=summary(linMOD)$coefficients[2,4])
return(myOUT)
}
linREG()
linREG <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
myOUT <- summary(linMOD)
return(myOUT)
}
linREG()
linREG(x=rep(1,10), y=runif(10))
linREGPLT <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
plot(y=y,x=x,pch=21,bg="lightblue",cex=2, main="Linear Regression", xlab="Generations of Exposure", ylab="Fecundity")
myOUT <- abline(linREGPLT)
return(myOUT)
}
linREGPLT()
linREGPLT <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
plot(y=y,x=x,pch=21,bg="lightblue",cex=2, main="Linear Regression", xlab="Generations of Exposure", ylab="Fecundity")
myOUT <- abline(linREGPLT)
return(myOUT)
}
linREGPLT()
linREGPLT()
linREGPLT <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
plot(y=y,x=x,pch=21,bg="lightblue",cex=2, main="Linear Regression", xlab="Generations of Exposure", ylab="Fecundity")
abline(linREGPLT, add=TRUE)
}
linREGPLT()
linREGPLT()
linREGPLT <- function(x=runif(10), y=runif(10)){
linMOD <- lm(y~x)
plot(y=y,x=x,pch=21,bg="lightblue",cex=2, main="Linear Regression", xlab="Generations of Exposure", ylab="Fecundity")
abline(linMOD, add=TRUE)
}
linREGPLT()
linREGPLT()
linREGPLT(x=rep(1,10), y=runif(10))
linREGPLT(x=rep(1,10), y=runif(10))
linREGPLT(x=runif(10), y=runif(10))
linREGPLT(x=runif(10), y=runif(10))
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(10,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(10,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(10,shape=5,scale=5),rgamma(10,shape=5,scale=10))){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(10,shape=5,scale=5)){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
##With fake data
aovSUM(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(3,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
# plot
boxplot(yVar~xVar,data=dataFrame,col=c("grey","thistle","orchid"))
```
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(shape=5, scale=5), rgamma(shape=5, scale=5)){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
##With fake data
aovSUM(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(3,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
# plot
boxplot(yVar~xVar,data=dataFrame,col=c("grey","thistle","orchid"))
```
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(shape=5, scale=5), rgamma(shape=5, scale=5)){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
##With fake data
aovSUM(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(3,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
# plot
boxplot(yVar~xVar,data=dataFrame,col=c("grey","thistle","orchid"))
```
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5))), y=c(rgamma(5,shape=5, scale=5), rgamma(5,shape=5, scale=5)){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5))), y=c(rgamma(5,shape=5, scale=5), rgamma(5,shape=5, scale=5)){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
myOUT <- summary(aovMOD)
return(myOUT)
}
aovSUM()
aovSUM(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(8,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("Control","Toxic"))
}
aovPLT()
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen"))
}
aovPLT()
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen", ylab = "Fecundity"))
}
aovPLT()
aovPLT()
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen", ylab = "Fecundity"))
}
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen", ylab = "Fecundity"))
}
aovPLT()
aovPLT()
boxplot(y~x,col=c("darkolivegreen1","darkgreen", main = "Fecundity in HAB"))
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen", main = "Fecundity in HAB"))
}
aovPLT()
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen"))
}
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen"))
}
aovPLT()
aovPLT()
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen"), ylab="Fecundity")
}
aovPLT <- function(x=as.factor(rep(c("Control","Toxic"),each=5)), y=c(rgamma(5,shape=5,scale=5),rgamma(5,shape=5,scale=10))){
aovMOD <- aov(y~x)
boxplot(y~x,col=c("darkolivegreen1","darkgreen"), ylab="Fecundity")
}
aovPLT()
aovPLT(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(8,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
aovPLT(x=as.factor(rep(c("Maine","New Jersey"),each=5)), y=c(rgamma(8,shape=5,scale=5),rgamma(2,shape=5,scale=10)))
ContingencySUM <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
myOUT <- print(chisq.test(dataMATRIX))
return(myOUT)
}
ContingencySUM <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
myOUT <- print(chisq.test(dataMATRIX))
return(myOUT)
}
ContingencySUM()
ContingencySUM(dataMATRIX = rbind(c(87,66, 77), c(66, 44, 23))
```
ContingencySUM(dataMATRIX = rbind(c(87,66, 77), c(66, 44, 23)))
ContingencySUM <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
mosaicplot(x=dataMATRIX,
col=c("firebrick2","firebrick3","firebrick4"),
shade=FALSE)
}
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
mosaicplot(x=dataMATRIX,
col=c("firebrick2","firebrick3","firebrick4"),
shade=FALSE)
}
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("cornflowerblue","tomato"))
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX))
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX), beside = TRUE)
}
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX), beside = TRUE)
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX), args.legend = list(x ='topright', bty='n', inset=c(-0.25,0)))
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX), args.legend=list(x=ncol(y) + 3, y=max(colSums(y)),bty = "n"))
}
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX), args.legend=list(x=ncol(y) + 3, y=max(colSums(y)),bty = "n"))
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX))
}
ContingencyPLT()
ContingencyPLT()
dataMATRIX= rbind(c(90,98,89), c(70,60,20))
ncol(dataMATRIX)
colSums(dataMATRIX)
max(colSums(dataMATRIX))
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), ylim=c(0,max(colSums(dataMATRIX))), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), ylim=c(0,max(colSums(dataMATRIX))), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), ylim=c(0,max(dataMATRIX)), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), ylim=c(0,max(dataMATRIX)), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
ContingencyPLT <- function(dataMATRIX= rbind(c(90,98,89), c(70,60,20))){
rownames(dataMATRIX) <- c("Control","Toxic")
colnames(dataMATRIX) <-c("LowTOX",
"MedTOX",
"HighTOX")
barplot(height=dataMATRIX,
beside=TRUE,
col=c("darkolivegreen1","darkgreen"), ylim=c(0,max(colSums(dataMATRIX))), legend = rownames(dataMATRIX),args.legend=list(
x=ncol(dataMATRIX) + 3,
y=max(colSums(dataMATRIX)),
bty = "n"
))
}
ContingencyPLT()
setwd("C:/Users/Lauren/Desktop/Gradschool/UVM/Spring 2017/Ecological Genomics")
library("DESeq2")
library("ggplot2")
countsTable <- read.delim('countsdata_trim2.txt', header=TRUE, stringsAsFactors=TRUE, row.names=1)
countData <- as.matrix(countsTable)
head(countData)
ncol(countData)
dim(countData)
conds <- read.delim("cols_data_trim.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
head(conds)
colData <- as.data.frame(conds)
head(colData)
dim(colData)
colInt<-subset(colData,location=="int")
colSub <- subset(colData, location=="sub")
nrow(colInt)
countDataInt<-countData[, which(colnames(countData) %in% row.names(colInt))]
countDataSub<-countData[, -which(colnames(countData) %in% row.names(colInt))]
dim(countDataInt)
dim(countDataSub)
ddsInt <- DESeqDataSetFromMatrix(countData = countDataInt, colData = colInt ,design = ~ health)
ddsInt <- ddsInt[ rowSums(counts(ddsInt)) > 100, ]
colData(ddsInt)$health <- factor(colData(ddsInt)$health, levels=c("H","S"))
ddsInt <- ddsInt[ rowSums(counts(ddsInt)) > 100, ]
colData(ddsInt)$health <- factor(colData(ddsInt)$health, levels=c("H","S"))
ddsInt <- DESeq(ddsInt)
resInt <- results(ddsInt)
resInt <- resInt[order(resInt$padj),]
head(resInt)
summary(resInt)
ddsSub <- DESeqDataSetFromMatrix(countData = countDataSub, colData = colSub ,design = ~ health)
ddsSub <- ddsSub[ rowSums(counts(ddsSub)) > 100, ]
colData(ddsSub)$health <- factor(colData(ddsSub)$health, levels=c("H","S"))
ddsSub <- DESeq(ddsSub)
resSub <- results(ddsSub)
resSub <- resSub[order(resSub$padj),]
head(resSub)
summary(resSub)
ddsLoc <- DESeqDataSetFromMatrix(countData = countData, colData = colData ,design = ~ location + health)
ddsLoc <- ddsLoc[ rowSums(counts(ddsLoc)) > 100, ]
colData(ddsLoc)$health <- factor(colData(ddsLoc)$health, levels=c("H","S"))
ddsLoc <- DESeq(ddsLoc)
resLoc <- results(ddsLoc)
resLoc <- resLoc[order(resLoc$padj),]
head(resLoc)
summary(resLoc)
vec<- c(205, 37, 20, 113, 209, 65)
summaryMatrix<- matrix(data=vec, nrow=2, ncol=3, byrow=FALSE)
summaryMatrix
row.names(summaryMatrix)<- c("Significantly Upregulated", "Significantly Downregulated")
summaryMatrix
colnames(summaryMatrix) <- c("Intertidal", "Subtidal", "Full Model")
summaryMatrix
citation
citation()
citation("DESeq2")
